import{r as e,o as n,a as s,b as r,F as a,d as t,c as l}from"./app.e02cfe6d.js";const o={},u=r("h1",{id:"getting-started"},[r("a",{class:"header-anchor",href:"#getting-started"},"#"),t(" Getting Started")],-1),i=t("To learn how to use Kubernetes, we'll start up a local cluster for experimentation. When you go to production, you'll launch a cluster in a cloud such as [DigitalOcean])(https://www.digitalocean.com/products/kubernetes/), "),c={href:"https://www.digitalocean.com/products/kubernetes/",target:"_blank",rel:"noopener noreferrer"},p=t("AWS"),d=t(", or "),b={href:"https://cloud.google.com/kubernetes-engine/",target:"_blank",rel:"noopener noreferrer"},m=t("GCP"),k=t("."),h=r("h2",{id:"install-docker"},[r("a",{class:"header-anchor",href:"#install-docker"},"#"),t(" Install Docker")],-1),g=r("p",null,"You'll want to have a copy of Docker around so you can work with containers, and you'll need it to start a Kubernetes cluster. If you don't already have Docker:",-1),f=t("On MacOS and Windows, install "),v={href:"https://www.docker.com/products/docker-desktop",target:"_blank",rel:"noopener noreferrer"},y=t("Docker Desktop"),E=t("."),w=t("On Linux, install "),A={href:"https://docs.docker.com/engine/install/",target:"_blank",rel:"noopener noreferrer"},T=t("Docker Engine"),q=t("."),P=r("li",null,[t("Make sure you can run "),r("code",null,"docker --version"),t(" successfully before continuing.")],-1),x=r("h2",{id:"start-a-cluster"},[r("a",{class:"header-anchor",href:"#start-a-cluster"},"#"),t(" Start a Cluster")],-1),R=r("p",null,"Once you have a copy of Docker running, you can use it to start a local Kubernetes cluster. Here are two tools I recommend for starting a local cluster:",-1),C={href:"https://docs.docker.com/desktop/kubernetes/",target:"_blank",rel:"noopener noreferrer"},S=t("Docker Desktop"),D=t(" includes a Kubernetes server that you can enable in the Preferences window."),N={href:"https://kind.sigs.k8s.io/",target:"_blank",rel:"noopener noreferrer"},I=t("kind"),M=t(' ("Kubernetes in Docker") boots a Kubernetes cluster by running Nodes as Docker containers.'),G=l('<p>Pick one of the above and follow the instructions to start a new cluster.</p><p>Once your cluster is up and running, verify it by running <code>kubectl</code> in your terminal:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ kubectl version\n\nClient Version: version.Info<span class="token punctuation">{</span>Major:<span class="token string">&quot;1&quot;</span>, Minor:<span class="token string">&quot;19&quot;</span>, GitVersion:<span class="token string">&quot;v1.19.7&quot;</span>, GitCommit:<span class="token string">&quot;1dd5338295409edcfff11505e7bb246f0d325d15&quot;</span>, GitTreeState:<span class="token string">&quot;clean&quot;</span>, BuildDate:<span class="token string">&quot;2021-01-13T13:23:52Z&quot;</span>, GoVersion:<span class="token string">&quot;go1.15.5&quot;</span>, Compiler:<span class="token string">&quot;gc&quot;</span>, Platform:<span class="token string">&quot;darwin/amd64&quot;</span><span class="token punctuation">}</span>\nServer Version: version.Info<span class="token punctuation">{</span>Major:<span class="token string">&quot;1&quot;</span>, Minor:<span class="token string">&quot;19&quot;</span>, GitVersion:<span class="token string">&quot;v1.19.7&quot;</span>, GitCommit:<span class="token string">&quot;1dd5338295409edcfff11505e7bb246f0d325d15&quot;</span>, GitTreeState:<span class="token string">&quot;clean&quot;</span>, BuildDate:<span class="token string">&quot;2021-01-13T13:15:20Z&quot;</span>, GoVersion:<span class="token string">&quot;go1.15.5&quot;</span>, Compiler:<span class="token string">&quot;gc&quot;</span>, Platform:<span class="token string">&quot;linux/arm64&quot;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>If you see something like <code>Error from server (NotFound): the server could not find the requested resource</code>, instead of <code>Server Version</code>, then your client isn&#39;t talking to your server properly. Try the following:</p><ul><li>Run <code>kubectl config get-contexts</code> to list the available cluster contexts.</li><li>Find the context that corresponds to your newly-created cluster.</li><li>Run <code>kubectl config use-context CONTEXT_NAME</code> to switch to a context in the list.</li><li>Run your command again.</li></ul><p>Once your cluster is up and running, you&#39;re ready to start using it to run code!</p><h2 id="what-is-kubectl"><a class="header-anchor" href="#what-is-kubectl">#</a> What is kubectl?</h2><p>Throughout this tutorial, we will use kubectl to work with our cluster.</p>',8),L={href:"https://kubernetes.io/docs/reference/kubectl/overview/",target:"_blank",rel:"noopener noreferrer"},O=t("kubectl"),U=t(" is a command-line utility that we'll use to:"),V=l('<ul><li>List resources running in the cluster</li><li>Create and delete resources</li><li>Update existing resources with new values and configurations</li><li>Turn YAML definitions into live cluster resources and vice versa</li><li>Read logs from containers and run commands in containers</li><li>Understand how our apps work inside the cluster</li></ul><p>Let&#39;s explore the cluster a bit now.</p><h2 id="explore-the-cluster"><a class="header-anchor" href="#explore-the-cluster">#</a> Explore the Cluster</h2><p>Try these commands to see some details about your cluster:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ kubectl get pods\n\nNo resources found in default namespace.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>This tells us a little bit about our cluster:</p><ul><li>Your command ran in the <code>default</code> namespace</li><li>There are no Pods in that namespace</li></ul><p>Let&#39;s look for all resources in this namespace, not just Pods:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ kubectl get all\n\nNAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nservice/kubernetes   ClusterIP   10.96.0.1    &lt;none&gt;        443/TCP   6d21h\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Great! We found a Service named <code>kubernetes</code>. Let&#39;s learn more about this Service:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ kubectl describe service kubernetes\n\nName:              kubernetes\nNamespace:         default\nLabels:            component=apiserver\n                   provider=kubernetes\nAnnotations:       &lt;none&gt;\nSelector:          &lt;none&gt;\nType:              ClusterIP\nIP:                10.96.0.1\nPort:              https  443/TCP\nTargetPort:        6443/TCP\nEndpoints:         192.168.65.4:6443\nSession Affinity:  None\nEvents:            &lt;none&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>',11),Y=t("If you want to learn about the identity of a resource, the most important bits are usually at the top: "),_=r("code",null,"component=apiserver",-1),K=t(" and "),j=r("code",null,"provider=kubernetes",-1),W=t(" tell you that this is a core piece of Kubernetes infrastructure called the "),$={href:"https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/",target:"_blank",rel:"noopener noreferrer"},B=t("API Server"),F=t("."),X=l('<p>Finally, let&#39;s check out what resources are present in all namespaces:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ kubectl get all --all-namespaces\n\nNAMESPACE     NAME                                         READY   STATUS    RESTARTS   AGE\nkube-system   pod/coredns-f9fd979d6-m5w9g                  1/1     Running   2          6d21h\nkube-system   pod/coredns-f9fd979d6-twjfw                  1/1     Running   2          6d21h\nkube-system   pod/etcd-docker-desktop                      1/1     Running   2          6d21h\nkube-system   pod/kube-apiserver-docker-desktop            1/1     Running   3          6d21h\nkube-system   pod/kube-controller-manager-docker-desktop   1/1     Running   2          6d21h\nkube-system   pod/kube-proxy-4hnrl                         1/1     Running   2          6d21h\nkube-system   pod/kube-scheduler-docker-desktop            1/1     Running   2          6d21h\nkube-system   pod/storage-provisioner                      1/1     Running   38         6d21h\nkube-system   pod/vpnkit-controller                        1/1     Running   2          6d21h\n\nNAMESPACE     NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE\ndefault       service/kubernetes   ClusterIP   10.96.0.1    &lt;none&gt;        443/TCP                  6d21h\nkube-system   service/kube-dns     ClusterIP   10.96.0.10   &lt;none&gt;        53/UDP,53/TCP,9153/TCP   6d21h\n\nNAMESPACE     NAME                        DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE\nkube-system   daemonset.apps/kube-proxy   1         1         1       1            1           kubernetes.io/os=linux   6d21h\n\nNAMESPACE     NAME                      READY   UP-TO-DATE   AVAILABLE   AGE\nkube-system   deployment.apps/coredns   2/2     2            2           6d21h\n\nNAMESPACE     NAME                                DESIRED   CURRENT   READY   AGE\nkube-system   replicaset.apps/coredns-f9fd979d6   2         2         2       6d21h\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>Neat – that&#39;s a list of all the cluster infrastructure that Docker Desktop used to set up my cluster.</p><p>In the next section, we&#39;ll run our own code in this cluster by creating our own resources.</p>',4);o.render=function(t,l){const o=e("OutboundLink");return n(),s(a,null,[u,r("p",null,[i,r("a",c,[p,r(o)]),d,r("a",b,[m,r(o)]),k]),h,g,r("ul",null,[r("li",null,[f,r("a",v,[y,r(o)]),E]),r("li",null,[w,r("a",A,[T,r(o)]),q]),P]),x,R,r("ul",null,[r("li",null,[r("a",C,[S,r(o)]),D]),r("li",null,[r("a",N,[I,r(o)]),M])]),G,r("p",null,[r("a",L,[O,r(o)]),U]),V,r("p",null,[Y,_,K,j,W,r("a",$,[B,r(o)]),F]),X],64)};export default o;
